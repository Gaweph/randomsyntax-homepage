{"version":3,"file":"Post-Section.svelte-f6edad48.js","sources":["../../../unoptimized/client/_components/Post-Section.svelte.js"],"sourcesContent":["/* src/components/Post-Section.svelte generated by Svelte v3.32.3 */\nimport {\n\tSvelteComponent,\n\tappend,\n\tchildren,\n\tclaim_element,\n\tclaim_space,\n\tclaim_text,\n\tcreate_slot,\n\tdetach,\n\telement,\n\tinit,\n\tinsert,\n\tsafe_not_equal,\n\tset_data,\n\tspace,\n\ttext,\n\ttransition_in,\n\ttransition_out,\n\tupdate_slot\n} from \"../_snowpack/pkg/svelte/internal.js\";\n\nfunction create_if_block(ctx) {\n\tlet h2;\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\th2 = element(\"h2\");\n\t\t\tt = text(/*title*/ ctx[0]);\n\t\t},\n\t\tl(nodes) {\n\t\t\th2 = claim_element(nodes, \"H2\", {});\n\t\t\tvar h2_nodes = children(h2);\n\t\t\tt = claim_text(h2_nodes, /*title*/ ctx[0]);\n\t\t\th2_nodes.forEach(detach);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, h2, anchor);\n\t\t\tappend(h2, t);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*title*/ 1) set_data(t, /*title*/ ctx[0]);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(h2);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet t;\n\tlet current;\n\tlet if_block = /*title*/ ctx[0] !== \"\" && create_if_block(ctx);\n\tconst default_slot_template = /*#slots*/ ctx[2].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[1], null);\n\n\treturn {\n\t\tc() {\n\t\t\tif (if_block) if_block.c();\n\t\t\tt = space();\n\t\t\tif (default_slot) default_slot.c();\n\t\t},\n\t\tl(nodes) {\n\t\t\tif (if_block) if_block.l(nodes);\n\t\t\tt = claim_space(nodes);\n\t\t\tif (default_slot) default_slot.l(nodes);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tif (if_block) if_block.m(target, anchor);\n\t\t\tinsert(target, t, anchor);\n\n\t\t\tif (default_slot) {\n\t\t\t\tdefault_slot.m(target, anchor);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*title*/ ctx[0] !== \"\") {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(t.parentNode, t);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && dirty & /*$$scope*/ 2) {\n\t\t\t\t\tupdate_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[1], dirty, null, null);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(default_slot, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(default_slot, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (if_block) if_block.d(detaching);\n\t\t\tif (detaching) detach(t);\n\t\t\tif (default_slot) default_slot.d(detaching);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\tlet { title = \"\" } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif (\"title\" in $$props) $$invalidate(0, title = $$props.title);\n\t\tif (\"$$scope\" in $$props) $$invalidate(1, $$scope = $$props.$$scope);\n\t};\n\n\treturn [title, $$scope, slots];\n}\n\nclass Post_Section extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { title: 0 });\n\t}\n}\n\nexport default Post_Section;\n//# sourceMappingURL=Post-Section.svelte.js.map\n"],"names":["create_if_block","ctx","h2","t","[object Object]","element","text","nodes","claim_element","h2_nodes","children","claim_text","forEach","detach","target","anchor","insert","append","dirty","set_data","detaching","create_fragment","current","if_block","default_slot_template","default","default_slot","create_slot","c","space","l","claim_space","m","p","parentNode","d","update_slot","local","transition_in","transition_out","instance","$$self","$$props","$$invalidate","$$slots","slots","$$scope","title","$$set","Post_Section","SvelteComponent","options","super","init","this","safe_not_equal"],"mappings":"+JAsBA,SAASA,EAAgBC,GACxB,IAAIC,EACAC,EAEJ,MAAO,CACNC,IACCF,EAAKG,EAAQ,MACbF,EAAIG,EAAeL,EAAI,KAExBG,EAAEG,GACDL,EAAKM,EAAcD,EAAO,KAAM,IAChC,IAAIE,EAAWC,EAASR,GACxBC,EAAIQ,EAAWF,EAAoBR,EAAI,IACvCQ,EAASG,QAAQC,IAElBT,EAAEU,EAAQC,GACTC,EAAOF,EAAQZ,EAAIa,GACnBE,EAAOf,EAAIC,IAEZC,EAAEH,EAAKiB,GACgB,EAAlBA,GAAqBC,EAAShB,EAAaF,EAAI,KAEpDG,EAAEgB,GACGA,GAAWP,EAAOX,KAKzB,SAASmB,EAAgBpB,GACxB,IAAIE,EACAmB,EACAC,EAAgC,KAAXtB,EAAI,IAAaD,EAAgBC,GAC1D,MAAMuB,EAAmCvB,EAAI,GAAGwB,QAC1CC,EAAeC,EAAYH,EAAuBvB,EAAiBA,EAAI,GAAI,MAEjF,MAAO,CACNG,IACKmB,GAAUA,EAASK,IACvBzB,EAAI0B,IACAH,GAAcA,EAAaE,KAEhCxB,EAAEG,GACGgB,GAAUA,EAASO,EAAEvB,GACzBJ,EAAI4B,EAAYxB,GACZmB,GAAcA,EAAaI,EAAEvB,IAElCH,EAAEU,EAAQC,GACLQ,GAAUA,EAASS,EAAElB,EAAQC,GACjCC,EAAOF,EAAQX,EAAGY,GAEdW,GACHA,EAAaM,EAAElB,EAAQC,GAGxBO,GAAU,GAEXlB,EAAEH,GAAMiB,IACkB,KAAXjB,EAAI,GACbsB,EACHA,EAASU,EAAEhC,EAAKiB,IAEhBK,EAAWvB,EAAgBC,GAC3BsB,EAASK,IACTL,EAASS,EAAE7B,EAAE+B,WAAY/B,IAEhBoB,IACVA,EAASY,EAAE,GACXZ,EAAW,MAGRG,GACCA,EAAaO,GAAyB,EAApBf,GACrBkB,EAAYV,EAAcF,EAAuBvB,EAAiBA,EAAI,GAAIiB,EAAO,KAAM,OAI1Fd,EAAEiC,GACGf,IACJgB,EAAcZ,EAAcW,GAC5Bf,GAAU,IAEXlB,EAAEiC,GACDE,EAAeb,EAAcW,GAC7Bf,GAAU,GAEXlB,EAAEgB,GACGG,GAAUA,EAASY,EAAEf,GACrBA,GAAWP,EAAOV,GAClBuB,GAAcA,EAAaS,EAAEf,KAKpC,SAASoB,EAASC,EAAQC,EAASC,GAClC,IAAMC,QAASC,EAAQ,GAAEC,QAAEA,GAAYJ,GACnCK,MAAEA,EAAQ,IAAOL,EAOrB,OALAD,EAAOO,MAAQN,IACV,UAAWA,GAASC,EAAa,EAAGI,EAAQL,EAAQK,OACpD,YAAaL,GAASC,EAAa,EAAGG,EAAUJ,EAAQI,UAGtD,CAACC,EAAOD,EAASD,GAGzB,MAAMI,UAAqBC,EAC1B9C,YAAY+C,GACXC,QACAC,EAAKC,KAAMH,EAASX,EAAUnB,EAAiBkC,EAAgB,CAAER,MAAO"}