{"version":3,"file":"Full-Screen.svelte-89797bc9.css","sources":["../../../../../P5Canvas.svelte","../../../../../Full-Screen.svelte"],"sourcesContent":["<script>\r\n  import { onMount, onDestroy } from \"svelte\";\r\n  // export let src;\r\n  export let sketch;\r\n  export let id = \"sketchXX\";\r\n  export let p5Version = \"1.0.0\";\r\n  export let width = \"100%\";\r\n  export let height = \"100%\";\r\n\r\n  let myp5 = null;\r\n\r\n  function sketchStarted() {\r\n    var div = document.getElementById(id);\r\n    for(var i = 0; i < div.childNodes.length; i++) {\r\n      var foundCanvas = div.childNodes[i].className == \"p5Canvas\";\r\n      if(foundCanvas) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function tryStartSketch() {\r\n    console.log(\"tryStartSketch\");\r\n    if(p5 && sketch && !sketchStarted()) {\r\n      myp5 = new p5(sketch, id);\r\n      console.log(\"starting sketch\", sketch);\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    var interval = setInterval(() => {\r\n      tryStartSketch();\r\n      var started = sketchStarted();\r\n      if(started) {\r\n        clearInterval(interval);\r\n      }\r\n    }, 100);\r\n  });\r\n\r\n  onDestroy(() => {\r\n    if (myp5 != null && myp5.remove) {\r\n      myp5.remove();\r\n    }\r\n  });\r\n\r\n</script>\r\n\r\n<style>\r\n  div {\r\n    margin: 0px 0px;\r\n  }\r\n</style>\r\n\r\n<svelte:head>\r\n  <script src=\"/content/blog/js/p5.{p5Version}.min.js\">\r\n\r\n  </script>\r\n</svelte:head>\r\n\r\n<div {id} style=\"position: relative; width: {width}; height: {height}\" />\r\n","<script>\r\n  import {\r\n    setQueryParamWithHistory,\r\n    deleteQueryParam,\r\n    getQueryParam\r\n  } from \"../helpers/window-helper\";\r\n\r\n  import { onMount } from \"svelte\";\r\n  export let reloadSlotOnToggle = true;\r\n\r\n  onMount(() => {\r\n    overlay = getQueryParam(\"full-screen\") == \"1\";\r\n\r\n    window.addEventListener(\"popstate\", event => {\r\n      // console.log(\"location: \" + document.location + \", state: \" + JSON.stringify(event.state));\r\n      overlay = getQueryParam(\"full-screen\") == \"1\";\r\n    });\r\n  });\r\n  let overlay = false;\r\n  let reload = false;\r\n  function toggleFullScreen() {\r\n    overlay = !overlay;\r\n    if (overlay) {\r\n      setQueryParamWithHistory(\"full-screen\", \"1\");\r\n    } else {\r\n      deleteQueryParam(\"full-screen\");\r\n    }\r\n    if (reloadSlotOnToggle) {\r\n      reload = !reload;\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .fullscreen-wrapper {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 250px;\r\n    /* background-color: red; */\r\n  }\r\n  .fullscreen-wrapper.overlay {\r\n    background-color: #f5f5f5;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1000;\r\n  }\r\n\r\n  .overlay-button.overlay {\r\n    position: absolute;\r\n    bottom: 10px;\r\n    left: 10px;\r\n    z-index: 1001;\r\n  }\r\n</style>\r\n\r\n<div class=\"fullscreen-wrapper\" class:overlay>\r\n  <!-- reload slot when toggled -->\r\n  {#if reload}\r\n    <slot />\r\n  {:else}\r\n    <slot />\r\n  {/if}\r\n</div>\r\n<button class=\"overlay-button\" class:overlay on:click={toggleFullScreen}>\r\n  FULL SCREEN MODE\r\n</button>\r\n"],"names":[],"mappings":"AAiDE,GAAG,cAAC,CAAC,AACH,MAAM,CAAE,GAAG,CAAC,GAAG,AACjB,CAAC;ACjBD,mBAAmB,eAAC,CAAC,AACnB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,AAEf,CAAC,AACD,mBAAmB,QAAQ,eAAC,CAAC,AAC3B,gBAAgB,CAAE,OAAO,CACzB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,AACf,CAAC,AAED,eAAe,QAAQ,eAAC,CAAC,AACvB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,IAAI,CACZ,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,IAAI,AACf,CAAC"}