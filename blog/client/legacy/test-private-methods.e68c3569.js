import{a as e,b as t,c as n,d as a,i as o,s,e as r,S as i,f as c,k as u,g as m,o as f,m as l,p as h,u as $,t as g,h as d,j as p,n as w,z as v,C as b,G as y,y as R,A as j}from"./client.6c61c330.js";import"./Tag.d7146f10.js";import"./Post-Tags-Projects.d7577e0f.js";import{P as T,a as x}from"./Post-Contents.70cd398c.js";import{P as N}from"./Post-Section.6722fb24.js";import{P}from"./PrismJS.987654e1.js";import{C as k}from"./Callout.4f436b47.js";function B(e){var a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var o,s=t(e);if(a){var r=t(this).constructor;o=Reflect.construct(s,arguments,r)}else o=s.apply(this,arguments);return n(this,o)}}function F(e){var t,n,a,o=new P({props:{language:"csharp",code:'using System;\nusing System.Reflection;\nnamespace TestUtilities\n{\n    public static class TestHelpers\n    {\n        public static object RunPrivateMethod(this object obj, string methodName, params object[] args)\n        {\n            var method = obj\n                .GetType()\n                .GetMethod(methodName, BindingFlags.NonPublic | BindingFlags.Instance);\n            if (method == null)\n            {\n                throw new ArgumentException(\n                    $"{obj.GetType()} does not contain the method {methodName}", \n                    "methodName"\n                );\n            }\n            return method.Invoke(obj, args);\n        }\n    }\n}'}}),s=new P({props:{language:"csharp",code:'var name = testObject.RunPrivateMethod("SecretInternalMethod");'}});return{c:function(){t=v("Need the solution in the hurry?  Here you go:\r\n  "),c(o.$$.fragment),n=v("\r\nUse it like this\r\n"),c(s.$$.fragment)},l:function(e){t=b(e,"Need the solution in the hurry?  Here you go:\r\n  "),m(o.$$.fragment,e),n=b(e,"\r\nUse it like this\r\n"),m(s.$$.fragment,e)},m:function(e,r){h(e,t,r),l(o,e,r),h(e,n,r),l(s,e,r),a=!0},p:y,i:function(e){a||(g(o.$$.fragment,e),g(s.$$.fragment,e),a=!0)},o:function(e){d(o.$$.fragment,e),d(s.$$.fragment,e),a=!1},d:function(e){e&&w(t),p(o,e),e&&w(n),p(s,e)}}}function S(e){var t;return{c:function(){t=v("Running logic inside of private method suggests that the code should be refactored (maybe moved to a helper class or a service layer).  \r\nThe fact is that sometimes we need to test existing/legacy code or for a number of reasons the logic is in a private method and we need to test it.")},l:function(e){t=b(e,"Running logic inside of private method suggests that the code should be refactored (maybe moved to a helper class or a service layer).  \r\nThe fact is that sometimes we need to test existing/legacy code or for a number of reasons the logic is in a private method and we need to test it.")},m:function(e,n){h(e,t,n)},d:function(e){e&&w(t)}}}function M(e){var t,n,a,o,s,r,i,u,f,$,y,T,x,N,B,F,M=new k({props:{title:"Great, I can test my private methods.  But should I?",$$slots:{default:[S]},$$scope:{ctx:e}}}),A=new P({props:{language:"csharp",inline:"true",code:"System.Reflection"}}),G=new P({props:{language:"csharp",inline:"true",code:"RunPrivateMethod()"}}),I=new P({props:{language:"csharp",inline:"true",code:"BindingFlags.NonPublic | BindingFlags.Instance"}}),C=new P({props:{language:"csharp",inline:"true",code:"MethodInfo"}});return{c:function(){t=v("We have a class with some internal code that we would like to run in isolation to test that it is doing what we think it is doing.  \r\n"),n=R("br"),a=R("br"),o=v("\r\nI know there are many arguments to  be made as to whether we should be doing this.  Many will suggest that having lots of logic in a private method means that it should probably be refactored into a helper class or service layer,  \r\nwhile this is true in some cases the fact is that sometimes we have some code in a class (legacy code) and we want to test it.\r\n\r\n"),c(M.$$.fragment),s=v("\r\n\r\nThe main probelm we have is that if we make an instance of a class we just don't have access to its private stuff from the outside.  \r\nLuckily for us the "),c(A.$$.fragment),r=v(" namespace can help us get access to the private members and invoke them.\r\n\r\n"),i=R("br"),u=R("br"),f=v("\r\n\r\nThe above solution is an extension method that  allows any object to call "),c(G.$$.fragment),$=v(".\r\n"),y=R("br"),T=R("br"),x=v("\r\n\r\nThe magic happens mainly with "),c(I.$$.fragment),N=v(" \r\nwhich allows us to use reflection to get the "),c(C.$$.fragment),B=v(" for the specified private method.")},l:function(e){t=b(e,"We have a class with some internal code that we would like to run in isolation to test that it is doing what we think it is doing.  \r\n"),n=j(e,"BR",{}),a=j(e,"BR",{}),o=b(e,"\r\nI know there are many arguments to  be made as to whether we should be doing this.  Many will suggest that having lots of logic in a private method means that it should probably be refactored into a helper class or service layer,  \r\nwhile this is true in some cases the fact is that sometimes we have some code in a class (legacy code) and we want to test it.\r\n\r\n"),m(M.$$.fragment,e),s=b(e,"\r\n\r\nThe main probelm we have is that if we make an instance of a class we just don't have access to its private stuff from the outside.  \r\nLuckily for us the "),m(A.$$.fragment,e),r=b(e," namespace can help us get access to the private members and invoke them.\r\n\r\n"),i=j(e,"BR",{}),u=j(e,"BR",{}),f=b(e,"\r\n\r\nThe above solution is an extension method that  allows any object to call "),m(G.$$.fragment,e),$=b(e,".\r\n"),y=j(e,"BR",{}),T=j(e,"BR",{}),x=b(e,"\r\n\r\nThe magic happens mainly with "),m(I.$$.fragment,e),N=b(e," \r\nwhich allows us to use reflection to get the "),m(C.$$.fragment,e),B=b(e," for the specified private method.")},m:function(e,c){h(e,t,c),h(e,n,c),h(e,a,c),h(e,o,c),l(M,e,c),h(e,s,c),l(A,e,c),h(e,r,c),h(e,i,c),h(e,u,c),h(e,f,c),l(G,e,c),h(e,$,c),h(e,y,c),h(e,T,c),h(e,x,c),l(I,e,c),h(e,N,c),l(C,e,c),h(e,B,c),F=!0},p:function(e,t){var n={};4&t&&(n.$$scope={dirty:t,ctx:e}),M.$set(n)},i:function(e){F||(g(M.$$.fragment,e),g(A.$$.fragment,e),g(G.$$.fragment,e),g(I.$$.fragment,e),g(C.$$.fragment,e),F=!0)},o:function(e){d(M.$$.fragment,e),d(A.$$.fragment,e),d(G.$$.fragment,e),d(I.$$.fragment,e),d(C.$$.fragment,e),F=!1},d:function(e){e&&w(t),e&&w(n),e&&w(a),e&&w(o),p(M,e),e&&w(s),p(A,e),e&&w(r),e&&w(i),e&&w(u),e&&w(f),p(G,e),e&&w($),e&&w(y),e&&w(T),e&&w(x),p(I,e),e&&w(N),p(C,e),e&&w(B)}}}function A(e){var t,n,a=new P({props:{language:"csharp",code:'using FluentAssertions;\nusing Xunit;\nnamespace TestUtilities\n{\n    public class UnitTest\n    {\n        [Fact]\n        public void GetFullName__Should_Return_ConcatinatedName()\n        {\n            // ARRANGE\n            var person = new Person { FirstName = "Ace", LastName = "Rimmer" };\n            // ACT\n            var name = person.RunPrivateMethod("GetFullName"); // <-- run private method\n            // ASSERT\n            name.Should().Be("Ace Rimmer");\n        }\n    }\n    \n    // Class that contains a private method\n    public class Person\n    {\n        public string FirstName { get; set; }\n        public string LastName { get; set; }\n        private string GetFullName()\n        {\n            return $"{FirstName} {LastName}";\n        }\n    }\n}'}});return{c:function(){t=v("The following usage example shows how this would be used in a unit test\r\n\r\n"),c(a.$$.fragment)},l:function(e){t=b(e,"The following usage example shows how this would be used in a unit test\r\n\r\n"),m(a.$$.fragment,e)},m:function(e,o){h(e,t,o),l(a,e,o),n=!0},p:y,i:function(e){n||(g(a.$$.fragment,e),n=!0)},o:function(e){d(a.$$.fragment,e),n=!1},d:function(e){e&&w(t),p(a,e)}}}function G(e){var t,n,a,o=new N({props:{title:"TL;DR",$$slots:{default:[F]},$$scope:{ctx:e}}}),s=new N({props:{title:"Explanation",$$slots:{default:[M]},$$scope:{ctx:e}}}),r=new N({props:{title:"Usage",$$slots:{default:[A]},$$scope:{ctx:e}}});return{c:function(){c(o.$$.fragment),t=u(),c(s.$$.fragment),n=u(),c(r.$$.fragment)},l:function(e){m(o.$$.fragment,e),t=f(e),m(s.$$.fragment,e),n=f(e),m(r.$$.fragment,e)},m:function(e,i){l(o,e,i),h(e,t,i),l(s,e,i),h(e,n,i),l(r,e,i),a=!0},p:function(e,t){var n={};4&t&&(n.$$scope={dirty:t,ctx:e}),o.$set(n);var a={};4&t&&(a.$$scope={dirty:t,ctx:e}),s.$set(a);var i={};4&t&&(i.$$scope={dirty:t,ctx:e}),r.$set(i)},i:function(e){a||(g(o.$$.fragment,e),g(s.$$.fragment,e),g(r.$$.fragment,e),a=!0)},o:function(e){d(o.$$.fragment,e),d(s.$$.fragment,e),d(r.$$.fragment,e),a=!1},d:function(e){p(o,e),e&&w(t),p(s,e),e&&w(n),p(r,e)}}}function I(e){var t,n,a=new T({props:{title:C,tags:e[0],projects:e[1]}}),o=new x({props:{$$slots:{default:[G]},$$scope:{ctx:e}}});return{c:function(){c(a.$$.fragment),t=u(),c(o.$$.fragment)},l:function(e){m(a.$$.fragment,e),t=f(e),m(o.$$.fragment,e)},m:function(e,s){l(a,e,s),h(e,t,s),l(o,e,s),n=!0},p:function(e,t){var n=$(t,1)[0],a={};4&n&&(a.$$scope={dirty:n,ctx:e}),o.$set(a)},i:function(e){n||(g(a.$$.fragment,e),g(o.$$.fragment,e),n=!0)},o:function(e){d(a.$$.fragment,e),d(o.$$.fragment,e),n=!1},d:function(e){p(a,e),e&&w(t),p(o,e)}}}var C="Test Private Methods";function L(e){return[["unit test","c-sharp"],[]]}var U=function(t){e(c,i);var n=B(c);function c(e){var t;return a(this,c),t=n.call(this),o(r(t),e,L,I,s,{}),t}return c}();export default U;
